name: build push image for deployment
on:
  push:
    branches:
      - main

env:
  job_env: sssss

jobs:
  sample-job-section:
    environment: action
    runs-on: ubuntu-latest
    env:
      SOME_ENV: some_Data

    steps:
      - name: print something
        run: echo "Here Modulithers!! i am printing something"
      - name: show host environment variable
        run: echo "some data ${{ env.SOME_ENV }}  actuator endpoint  ${{ vars.ACTUATOR_EXPOSED_ENDPOINTS }}"
      - name: print job
        env:
          step_level_env: stepenv
        run: echo " job env ${{ env.job_env }}   step env ${{ env.step_level_env }}"


  build-job-section:
    environment: action
    runs-on: ubuntu-latest

    container: postgres
    services:
      postgres:
        image: 'postgres:16.2'
        env:
          POSTGRES_DB: ${{ vars.MODULITH_DB_NAME }}
          POSTGRES_PASSWORD: ${{ secrets.MODULITH_PASSWORD }}
          POSTGRES_USER: ${{ secrets.MODULITH_USERNAME }}
        ports:
          - 5432:5432

    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Set Up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
          cache: maven

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.8.2
      - name: Output Info
        run: ls && mvn -version && ls /opt

      - name: show host environment variable
        run: echo "host ${{ vars.MODULITH_HOST }}  db name  ${{ vars.MODULITH_DB_NAME }}"

      - name: run maven test
        env:
          MODULITH_USERNAME: ${{ secrets.MODULITH_USERNAME }}
          MODULITH_PASSWORD: ${{ secrets.MODULITH_PASSWORD }}
          MODULITH_HOST: ${{ vars.MODULITH_HOST }}
          MODULITH_PORT: ${{ vars.MODULITH_PORT }}
          MODULITH_DB_NAME: ${{ vars.MODULITH_DB_NAME }}
        run: mvn clean test

      - name: Build with maven
        run: mvn clean package -DskipTests -Dspring-boot.run.profiles=${{ vars.SPRING_PROFILE }}
      - name: list files
        run: ls target/**

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: spring-modulith-artifact
          path: |
            target/spring-modulith-course-0.0.1-SNAPSHOT.jar
            Dockerfile
          overwrite: 'true'
          retention-days: 5

  push-image-section:
    environment: action
    needs: build-job-section
    runs-on: ubuntu-latest
    steps:
      - name: print something
        run: echo " job env ${{ env.job_env }}"

      - name: download artifact
        uses: actions/download-artifact@v4
        with:
          name: spring-modulith-artifact

      - name: Output downloaded contents
        run: ls && ls target/**

      - name: login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password:  ${{ secrets.DOCKER_PASSWORD }}
